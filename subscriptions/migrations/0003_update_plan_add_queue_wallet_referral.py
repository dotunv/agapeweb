# Generated by Django 5.2 on 2023-06-01 12:30

from django.db import migrations, models
import django.db.models.deletion
from django.conf import settings
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('subscriptions', '0002_initial'),
    ]

    operations = [
        # Update SubscriptionPlan model
        migrations.RenameField(
            model_name='subscriptionplan',
            old_name='amount',
            new_name='contribution_amount',
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='total_received',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Total amount received from members', max_digits=10),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='deduction_repurchase',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Amount deducted for repurchase (1/13 of contribution)', max_digits=10),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='deduction_maintenance',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Amount deducted for maintenance (2/13 of contribution)', max_digits=10),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='withdrawable_amount',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Amount available for withdrawal after deductions', max_digits=10),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='next_plan',
            field=models.ForeignKey(blank=True, help_text='Next plan to upgrade to (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous_plans', to='subscriptions.subscriptionplan'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='max_members',
            field=models.IntegerField(default=8),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='subscriptionplan',
            name='max_members',
            field=models.IntegerField(help_text='Number of members needed to complete the queue (8 or 13)'),
        ),
        migrations.AlterModelOptions(
            name='subscriptionplan',
            options={'ordering': ['contribution_amount']},
        ),
        
        # Add Queue model
        migrations.CreateModel(
            name='Queue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField()),
                ('payments_received', models.PositiveIntegerField(default=0, help_text='Number of payments received while at position #1')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='queues', to='subscriptions.subscriptionplan')),
                ('subscription', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='queue_entry', to='subscriptions.subscription')),
            ],
            options={
                'ordering': ['plan', 'position'],
                'unique_together': {('plan', 'position')},
            },
        ),
        
        # Add Wallet model
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wallet_type', models.CharField(choices=[('PLAN', 'Plan Wallet'), ('FUNDING', 'Funding Wallet'), ('REFERRAL', 'Referral Wallet')], max_length=20)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(blank=True, help_text='Only applicable for PLAN wallet type', null=True, on_delete=django.db.models.deletion.CASCADE, to='subscriptions.subscriptionplan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'wallet_type', 'plan')},
            },
        ),
        
        # Add Referral model
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('referrer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals_made', to=settings.AUTH_USER_MODEL)),
                ('referred_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_record', to=settings.AUTH_USER_MODEL)),
                ('subscription', models.ForeignKey(blank=True, help_text='Subscription that triggered this referral bonus', null=True, on_delete=django.db.models.deletion.CASCADE, to='subscriptions.subscription')),
            ],
            options={
                'unique_together': {('referrer', 'referred_user', 'subscription')},
            },
        ),
    ]
